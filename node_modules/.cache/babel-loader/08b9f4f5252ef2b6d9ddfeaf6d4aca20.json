{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Enrico\\\\Workplace\\\\progetto\\\\src\\\\component\\\\Tris\\\\Tris.js\";\nimport { Component } from 'react';\nimport \"../Tris.css\";\n\nfunction Square(props) {\n  const classes = \"squareTris\" + (props.selected ? \" selected\" : \"\");\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes,\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends Component {\n  renderSquare() {\n    let table = [];\n\n    for (let i = 0; i < 3; i++) {\n      let children = [];\n\n      for (let j = 0; j < 3; j++) {\n        let squareNum = 3 * i + j;\n        children.push( /*#__PURE__*/_jsxDEV(Square, {\n          value: this.props.current.squares[squareNum],\n          onClick: () => this.props.onClick(squareNum),\n          selected: this.props.current.buttonclicked === squareNum || (this.props.winline ? this.props.winline.some(el => el === squareNum) : false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this));\n      }\n\n      table.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this));\n    }\n\n    return table;\n  }\n\n  render() {\n    return this.renderSquare();\n  }\n\n}\n\nclass Tris extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        buttonclicked: -1\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    let winner = calculateWinner(squares);\n\n    if (winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat({\n        squares: squares,\n        buttonclicked: i\n      }),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    let winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      let [riga, colonna] = [Math.floor(step.buttonclicked / 3) + 1, step.buttonclicked % 3 + 1];\n      const desc = move ? 'Go to move #' + move + ' (' + riga + ' ' + colonna + ')' : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner.winner;\n    } else if (this.state.stepNumber === 9) {\n      status = 'Pareggio';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          current: current,\n          onClick: i => this.handleClick(i),\n          winline: winner ? winner.winline : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        winline: lines[i]\n      };\n    }\n  }\n\n  return null;\n}\n\nexport default Tris;\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/Enrico/Workplace/progetto/src/component/Tris/Tris.js"],"names":["Component","Square","props","classes","selected","onClick","value","Board","renderSquare","table","i","children","j","squareNum","push","current","squares","buttonclicked","winline","some","el","render","Tris","constructor","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","length","winner","calculateWinner","setState","concat","jumpTo","step","moves","map","move","riga","colonna","Math","floor","desc","status","lines","a","b","c"],"mappings":"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","sourcesContent":["import {Component} from 'react';\r\nimport \"../Tris.css\"\r\n\r\nfunction Square (props){\r\n  const classes = \"squareTris\" + (props.selected? \" selected\" : \"\")\r\n    return (\r\n      <button className={classes} onClick={props.onClick}>\r\n          {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends Component {\r\n\r\n  renderSquare() {\r\n      let table=[];\r\n      for(let i=0;i<3;i++){\r\n        let children=[];\r\n        for(let j=0;j<3;j++){\r\n          let squareNum=3*i+j;\r\n          children.push(\r\n              <Square \r\n                value={this.props.current.squares[squareNum]} \r\n                onClick={()=>this.props.onClick(squareNum)}\r\n                selected={\r\n                  this.props.current.buttonclicked===squareNum || \r\n                  (this.props.winline?this.props.winline.some(el=>el===squareNum):false)}\r\n              />);\r\n        }\r\n        table.push(<div className=\"board-row\">{children}</div>);\r\n      }\r\n      return table;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        this.renderSquare()\r\n    );\r\n  }\r\n}\r\n\r\nclass Tris extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        buttonclicked:-1,\r\n      }],\r\n      stepNumber:0,\r\n      xIsNext:true,\r\n\r\n    };\r\n  }\r\n  \r\n  handleClick(i){\r\n    const history=this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current=history[history.length-1];\r\n    const squares = current.squares.slice();\r\n    let winner=calculateWinner(squares)\r\n    if (winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat({squares:squares, buttonclicked:i}),\r\n      stepNumber:history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step){\r\n    this.setState({\r\n      stepNumber:step,\r\n      xIsNext:(step%2)===0\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n\r\n    let winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step,move) => {\r\n      let [riga, colonna]=[Math.floor(step.buttonclicked/3)+1, step.buttonclicked%3+1]\r\n      \r\n      const desc = move ?\r\n        'Go to move #' + move+' ('+ riga+' '+colonna+')':\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    \r\n    if (winner) {\r\n      status = 'Winner: ' + winner.winner;\r\n    } else if(this.state.stepNumber===9){\r\n      status='Pareggio'\r\n    }else{\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            current={current}\r\n            onClick={(i)=>this.handleClick(i)}\r\n            winline={winner?winner.winline:null}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {winner:squares[a], winline:lines[i]};\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\nexport default Tris;\r\n"]},"metadata":{},"sourceType":"module"}