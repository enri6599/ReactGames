{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Enrico\\\\Workplace\\\\progetto\\\\src\\\\component\\\\Forza4\\\\Forza4.js\";\nimport '../../css/Forza4.css';\nimport { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport Tavolo from './Tavolo';\nimport checkWin from './controlloVittoria';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight, faRedo } from '@fortawesome/free-solid-svg-icons';\nimport 'font-awesome/css/font-awesome.min.css';\n\nclass Forza4 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        griglia: Array(7).fill(\"\"),\n        lastInserted: {\n          riga: null,\n          colonna: null\n        }\n      }],\n      stepNum: 0,\n      xTurn: true\n      /*X = rosso - O = giallo*/\n\n    };\n  }\n\n  handleClick(i) {\n    const stepNum = this.state.stepNum;\n    const history = this.state.history.slice(0, stepNum + 1);\n    const game = history[history.length - 1];\n    const griglia = game.griglia.slice();\n\n    if (griglia[i].length >= 6 || (stepNum > 6 ? checkWin(game) : false)) {\n      return;\n    }\n\n    let lastInserted = {\n      riga: griglia[i].length,\n      colonna: i\n    };\n    let colonna = griglia[i].concat(this.state.xTurn ? \"X\" : \"O\");\n    let grid = griglia.slice(0, i).concat(colonna, griglia.slice(i + 1, griglia.length));\n    this.setState({\n      history: history.concat({\n        griglia: grid,\n        lastInserted: lastInserted\n      }),\n      stepNum: stepNum + 1,\n      xTurn: !this.state.xTurn\n    });\n  }\n\n  modStep(num) {\n    if (Math.abs(num) !== 1) return;\n    this.setState({\n      stepNum: this.state.stepNum + num,\n      xTurn: !this.state.xTurn\n    });\n  }\n\n  ricomincia() {\n    this.setState({\n      history: [{\n        griglia: Array(7).fill(\"\"),\n        lastInserted: {\n          riga: null,\n          colonna: null\n        }\n      }],\n      stepNum: 0,\n      xTurn: true\n      /*X = rosso - O = giallo*/\n\n    });\n  }\n\n  render() {\n    const stepNum = this.state.stepNum;\n    const history = this.state.history;\n    let stato;\n    if (stepNum > 6 && checkWin(history[stepNum])) stato = \"Ha vinto il \" + (!this.state.xTurn ? \"Rosso\" : \"Giallo\");else if (stepNum >= 42) stato = \"Pareggio\";else stato = \"Tocca al \" + (this.state.xTurn ? \"Rosso\" : \"Giallo\");\n    let turno = \"Turno: \" + stepNum;\n    let btnBackDis = stepNum === 0;\n    let btnFrontDis = stepNum === history.length - 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(Tavolo, {\n        onClick: i => this.handleClick(i),\n        griglia: history[stepNum].griglia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: turno\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: stato\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Forza4;","map":{"version":3,"sources":["C:/Users/Enrico/Workplace/progetto/src/component/Forza4/Forza4.js"],"names":["Component","Button","Tavolo","checkWin","FontAwesomeIcon","faArrowLeft","faArrowRight","faRedo","Forza4","constructor","props","state","history","griglia","Array","fill","lastInserted","riga","colonna","stepNum","xTurn","handleClick","i","slice","game","length","concat","grid","setState","modStep","num","Math","abs","ricomincia","render","stato","turno","btnBackDis","btnFrontDis"],"mappings":"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","sourcesContent":["import '../../css/Forza4.css';\r\nimport {Component} from 'react';\r\nimport {Button} from 'reactstrap';\r\nimport Tavolo from './Tavolo';\r\nimport checkWin from './controlloVittoria';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft, faArrowRight, faRedo} from '@fortawesome/free-solid-svg-icons';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass Forza4 extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state={\r\n\t\t\thistory : [{\r\n\t\t\t\tgriglia : Array(7).fill(\"\"),\r\n\t\t\t\tlastInserted: {riga: null, colonna:null}\r\n\t\t\t}],\r\n\t\t\tstepNum : 0,\r\n\t\t\txTurn\t: true,/*X = rosso - O = giallo*/\r\n\t\t};\r\n\t}\r\n\t\r\n\thandleClick(i){\r\n\t\tconst stepNum=this.state.stepNum;\r\n\t\tconst history=this.state.history.slice(0, stepNum + 1);\r\n\t\t\r\n\t\tconst game=history[history.length-1];\r\n\t\tconst griglia=game.griglia.slice();\r\n\r\n\t\tif(griglia[i].length>=6 || (stepNum>6?checkWin(game): false)){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet lastInserted={riga : griglia[i].length, colonna : i}\r\n\t\tlet colonna=griglia[i].concat(this.state.xTurn? \"X\":\"O\");\r\n\r\n\t\tlet grid= griglia.slice(0,i).concat(colonna, griglia.slice(i+1, griglia.length));\r\n\r\n\t\tthis.setState({\r\n\t\t\thistory : history.concat({ griglia:grid, lastInserted:lastInserted}),\r\n\t\t\tstepNum : stepNum + 1,\r\n\t\t\txTurn \t: !this.state.xTurn\r\n\t\t});\r\n\t}\r\n\r\n\tmodStep(num){\r\n\t\tif(Math.abs(num)!==1) return;\r\n\t\tthis.setState({\r\n\t\t\tstepNum : this.state.stepNum+num,\r\n\t\t\txTurn\t: !this.state.xTurn\r\n\t\t});\r\n\t}\r\n\r\n\tricomincia(){\r\n\t\tthis.setState({\r\n\t\t\thistory : [{\r\n\t\t\t\tgriglia : Array(7).fill(\"\"),\r\n\t\t\t\tlastInserted: {riga: null, colonna:null}\r\n\t\t\t}],\r\n\t\t\tstepNum : 0,\r\n\t\t\txTurn\t: true,/*X = rosso - O = giallo*/\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\trender(){\r\n\t\tconst stepNum=this.state.stepNum;\r\n\t\tconst history=this.state.history;\r\n\t\tlet stato;\r\n\t\tif(stepNum > 6 && checkWin(history[stepNum]))\r\n\t\t\tstato= \"Ha vinto il \"+ (!this.state.xTurn? \"Rosso\":\"Giallo\")\r\n\t\telse if(stepNum >= 42)\r\n\t\t\tstato = \"Pareggio\";\r\n\t\telse\r\n\t\t\tstato= \"Tocca al \" + (this.state.xTurn? \"Rosso\":\"Giallo\");\r\n\t\t\r\n\t\tlet turno=\"Turno: \"+stepNum;\r\n\r\n\t\tlet btnBackDis=stepNum===0;\r\n\t\tlet btnFrontDis=stepNum===history.length-1\r\n\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t\r\n\t\t\t\t<Tavolo onClick={(i)=>this.handleClick(i)} griglia={history[stepNum].griglia}/>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{turno}</div>\r\n\t\t\t\t\t<div >{stato}</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Forza4;"]},"metadata":{},"sourceType":"module"}