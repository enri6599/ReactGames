{"ast":null,"code":"function checkWin(game) {\n  //const pDir=[[1,0], [0, 1], [1,1], [1,-1]] /* colonna, riga */ \n  return controllaDirezione(game, [1, 0]) || controllaDirezione(game, [0, 1]) || controllaDirezione(game, [1, 1]) || controllaDirezione(game, [1, -1]);\n}\n\nfunction controllaDirezione(game, direzione) {\n  let num = controllaVerso(game, direzione) + controllaVerso(game, [-direzione[0], -direzione[1]]);\n  return num >= 3;\n  /*3 perché l'elemento appena selezionato sarà sicuramente valido */\n}\n\nfunction controllaVerso(game, direzione) {\n  let [x, y] = [game.lastInserted.colonna, game.lastInserted.riga];\n  const grid = game.griglia;\n  let count = 0;\n\n  for (let colore = grid[x][y]; checkBound(x, y) && colore === grid[x][y]; count++, x += direzione[0], y += direzione[1]);\n\n  return count - 1;\n  /*devo rimuovere l'elemento iniziale che non serve*/\n}\n\nfunction checkBound(x, y) {\n  if (x >= 0 && x < 7 && y >= 0 && y < 6) return true;\n  return false;\n}\n\nexport default checkWin;","map":{"version":3,"sources":["C:/Users/Enrico/Workplace/progetto/src/component/Forza4/controlloVittoria.js"],"names":["checkWin","game","controllaDirezione","direzione","num","controllaVerso","x","y","lastInserted","colonna","riga","grid","griglia","count","colore","checkBound"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,IAAlB,EAAuB;AACtB;AACA,SAAOC,kBAAkB,CAACD,IAAD,EAAO,CAAC,CAAD,EAAG,CAAH,CAAP,CAAlB,IAAmCC,kBAAkB,CAACD,IAAD,EAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAArD,IAAuEC,kBAAkB,CAACD,IAAD,EAAO,CAAC,CAAD,EAAG,CAAH,CAAP,CAAzF,IAA0GC,kBAAkB,CAACD,IAAD,EAAO,CAAC,CAAD,EAAG,CAAC,CAAJ,CAAP,CAAnI;AACA;;AAED,SAASC,kBAAT,CAA4BD,IAA5B,EAAkCE,SAAlC,EAA4C;AAC3C,MAAIC,GAAG,GAACC,cAAc,CAACJ,IAAD,EAAOE,SAAP,CAAd,GAAkCE,cAAc,CAACJ,IAAD,EAAO,CAAC,CAACE,SAAS,CAAC,CAAD,CAAX,EAAe,CAACA,SAAS,CAAC,CAAD,CAAzB,CAAP,CAAxD;AACA,SAAOC,GAAG,IAAE,CAAZ;AAAe;AACf;;AAED,SAASC,cAAT,CAAwBJ,IAAxB,EAA8BE,SAA9B,EAAwC;AACvC,MAAI,CAACG,CAAD,EAAGC,CAAH,IAAM,CAACN,IAAI,CAACO,YAAL,CAAkBC,OAAnB,EAA4BR,IAAI,CAACO,YAAL,CAAkBE,IAA9C,CAAV;AACA,QAAMC,IAAI,GAACV,IAAI,CAACW,OAAhB;AAEA,MAAIC,KAAK,GAAC,CAAV;;AACA,OAAI,IAAIC,MAAM,GAACH,IAAI,CAACL,CAAD,CAAJ,CAAQC,CAAR,CAAf,EAA2BQ,UAAU,CAACT,CAAD,EAAGC,CAAH,CAAV,IAAmBO,MAAM,KAAGH,IAAI,CAACL,CAAD,CAAJ,CAAQC,CAAR,CAAvD,EAAmEM,KAAK,IAAIP,CAAC,IAAEH,SAAS,CAAC,CAAD,CAAhB,EAAqBI,CAAC,IAAEJ,SAAS,CAAC,CAAD,CAAzG,CAA6G;;AAC7G,SAAOU,KAAK,GAAC,CAAb;AAAe;AAEf;;AACD,SAASE,UAAT,CAAoBT,CAApB,EAAsBC,CAAtB,EAAwB;AACvB,MAAGD,CAAC,IAAI,CAAL,IAAUA,CAAC,GAAG,CAAd,IAAmBC,CAAC,IAAI,CAAxB,IAA6BA,CAAC,GAAG,CAApC,EACC,OAAO,IAAP;AACD,SAAO,KAAP;AACA;;AAED,eAAeP,QAAf","sourcesContent":["function checkWin(game){\r\n\t//const pDir=[[1,0], [0, 1], [1,1], [1,-1]] /* colonna, riga */ \r\n\treturn controllaDirezione(game, [1,0]) || controllaDirezione(game, [0, 1]) || controllaDirezione(game, [1,1]) || controllaDirezione(game, [1,-1]);\r\n}\r\n\r\nfunction controllaDirezione(game, direzione){\r\n\tlet num=controllaVerso(game, direzione) + controllaVerso(game, [-direzione[0],-direzione[1]])\r\n\treturn num>=3; /*3 perché l'elemento appena selezionato sarà sicuramente valido */\r\n}\r\n\r\nfunction controllaVerso(game, direzione){\r\n\tlet [x,y]=[game.lastInserted.colonna, game.lastInserted.riga];\r\n\tconst grid=game.griglia;\r\n\r\n\tlet count=0;\r\n\tfor(let colore=grid[x][y]; checkBound(x,y) && colore===grid[x][y]; count++, x+=direzione[0], y+=direzione[1]);\r\n\treturn count-1;/*devo rimuovere l'elemento iniziale che non serve*/\r\n\r\n}\r\nfunction checkBound(x,y){\r\n\tif(x >= 0 && x < 7 && y >= 0 && y < 6)\r\n\t\treturn true;\r\n\treturn false;\r\n}\r\n\r\nexport default checkWin;"]},"metadata":{},"sourceType":"module"}