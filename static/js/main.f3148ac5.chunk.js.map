{"version":3,"sources":["component/Forza4/controlloVittoria.js","component/Forza4/Tavolo.js","component/Forza4/Forza4.js","component/Tris/Tris.js","App.js","utils/reportWebVitals.js","index.js"],"names":["controllaDirezione","game","direzione","controllaVerso","lastInserted","colonna","riga","x","y","grid","griglia","count","colore","checkBound","checkWin","Cella","props","classname","valore","className","CreaGioco","tabella","i","colonne","j","push","Col","onClick","Row","Forza4","state","history","Array","fill","stepNum","xTurn","this","slice","length","concat","setState","num","Math","abs","stato","turno","btnBackDis","btnFrontDis","Button","color","disabled","modStep","icon","faArrowLeft","faArrowRight","ricomincia","faRedo","handleClick","Component","Square","classes","selected","value","Board","table","children","squareNum","current","squares","buttonclicked","winline","some","el","renderSquare","calculateWinner","lines","a","b","c","winner","Tris","stepNumber","xIsNext","step","status","moves","map","move","desc","jumpTo","Container","Badge","md","xs","sm","lg","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAKA,SAASA,EAAmBC,EAAMC,GAEjC,OADQC,EAAeF,EAAMC,GAAaC,EAAeF,EAAM,EAAEC,EAAU,IAAIA,EAAU,MAC7E,EAGb,SAASC,EAAeF,EAAMC,GAK7B,IAJA,MAAU,CAACD,EAAKG,aAAaC,QAASJ,EAAKG,aAAaE,MAAnDC,EAAL,KAAOC,EAAP,KACMC,EAAKR,EAAKS,QAEZC,EAAM,EACFC,EAAOH,EAAKF,GAAGC,GAAIK,EAAWN,EAAEC,IAAMI,IAASH,EAAKF,GAAGC,GAAIG,IAASJ,GAAGL,EAAU,GAAIM,GAAGN,EAAU,IAC1G,OAAOS,EAAM,EAGd,SAASE,EAAWN,EAAEC,GACrB,OAAGD,GAAK,GAAKA,EAAI,GAAKC,GAAK,GAAKA,EAAI,EAKtBM,MAzBf,SAAkBb,GAEjB,OAAOD,EAAmBC,EAAM,CAAC,EAAE,KAAOD,EAAmBC,EAAM,CAAC,EAAG,KAAOD,EAAmBC,EAAM,CAAC,EAAE,KAAOD,EAAmBC,EAAM,CAAC,GAAG,K,uBCmB/I,SAASc,EAAMC,GACd,IAAIC,EAAU,aAAaD,EAAME,OAAOF,EAAME,OAAO,IAErD,OACC,wBAAQC,UAAWF,IAKNG,MA5Bf,SAAmBJ,GAGlB,IADA,IAAIK,EAAQ,GACJC,EAAE,EAAGA,GAAG,EAAEA,IAAI,CAGrB,IAFA,IAAIC,EAAQ,GADS,WAGbC,GACPD,EAAQE,KACP,cAACC,EAAA,EAAD,CAAaC,QAAS,kBAAIX,EAAMW,QAAQH,IAAxC,SAA4C,cAACT,EAAD,CAAOG,OAAQF,EAAMN,QAAQc,GAAGF,MAAlEE,KAFJA,EAAE,EAAEA,EAAE,EAAEA,IAAK,EAAbA,GAKRH,EAAQI,KAAK,cAACG,EAAA,EAAD,CAAaT,UAAU,yBAAvB,SAAiDI,GAAvCD,IAGxB,OACCD,GCkGaQ,E,kDAzGd,WAAYb,GAAO,IAAD,8BACjB,cAAMA,IAEDc,MAAM,CACVC,QAAU,CAAC,CACVrB,QAAUsB,MAAM,GAAGC,KAAK,IACxB7B,aAAc,CAACE,KAAM,KAAMD,QAAQ,QAEpC6B,QAAU,EACVC,OAAQ,GATQ,E,+CAalB,SAAYb,GACX,IAAMY,EAAQE,KAAKN,MAAMI,QACnBH,EAAQK,KAAKN,MAAMC,QAAQM,MAAM,EAAGH,EAAU,GAE9CjC,EAAK8B,EAAQA,EAAQO,OAAO,GAC5B5B,EAAQT,EAAKS,QAAQ2B,QAE3B,KAAG3B,EAAQY,GAAGgB,QAAQ,GAAMJ,EAAQ,GAAEpB,EAASb,IAA/C,CAIA,IAAIG,EAAa,CAACE,KAAOI,EAAQY,GAAGgB,OAAQjC,QAAUiB,GAClDjB,EAAQK,EAAQY,GAAGiB,OAAOH,KAAKN,MAAMK,MAAO,IAAI,KAEhD1B,EAAMC,EAAQ2B,MAAM,EAAEf,GAAGiB,OAAOlC,EAASK,EAAQ2B,MAAMf,EAAE,EAAGZ,EAAQ4B,SAExEF,KAAKI,SAAS,CACbT,QAAUA,EAAQQ,OAAO,CAAE7B,QAAQD,EAAML,aAAaA,IACtD8B,QAAUA,EAAU,EACpBC,OAAUC,KAAKN,MAAMK,W,qBAIvB,SAAQM,GACY,IAAhBC,KAAKC,IAAIF,IACZL,KAAKI,SAAS,CACbN,QAAUE,KAAKN,MAAMI,QAAQO,EAC7BN,OAASC,KAAKN,MAAMK,U,wBAItB,WACCC,KAAKI,SAAS,CACbT,QAAU,CAAC,CACVrB,QAAUsB,MAAM,GAAGC,KAAK,IACxB7B,aAAc,CAACE,KAAM,KAAMD,QAAQ,QAEpC6B,QAAU,EACVC,OAAQ,M,oBAKV,WAAS,IAGJS,EAHG,OACDV,EAAQE,KAAKN,MAAMI,QACnBH,EAAQK,KAAKN,MAAMC,QAGxBa,EADEV,EAAU,GAAKpB,EAASiB,EAAQG,IAC3B,iBAAmBE,KAAKN,MAAMK,MAAe,SAAR,SACrCD,GAAW,GACV,YAED,cAAgBE,KAAKN,MAAMK,MAAO,QAAQ,UAElD,IAAIU,EAAM,WAAWX,EAEjBY,EAAqB,IAAVZ,EACXa,EAAYb,IAAUH,EAAQO,OAAO,EAGzC,OACC,gCACC,cAACV,EAAA,EAAD,CAAKT,UAAU,aAAf,SACC,eAACO,EAAA,EAAD,WACC,eAACE,EAAA,EAAD,CAAKT,UAAU,6BAAf,UACC,cAAC6B,EAAA,EAAD,CAAQ7B,UAAU,WAAW8B,MAAM,UAAUC,SAAUJ,EAAYnB,QAAS,kBAAI,EAAKwB,SAAS,IAA9F,SAAkG,cAAC,IAAD,CAAiBC,KAAMC,QACzH,cAACL,EAAA,EAAD,CAAQ7B,UAAU,WAAW8B,MAAM,UAAUC,SAAUH,EAAapB,QAAS,kBAAI,EAAKwB,QAAQ,IAA9F,SAAmG,cAAC,IAAD,CAAiBC,KAAME,QAC1H,cAACN,EAAA,EAAD,CAAQ7B,UAAU,WAAW8B,MAAM,UAAUtB,QAAS,kBAAI,EAAK4B,cAA/D,SAA6E,cAAC,IAAD,CAAiBH,KAAMI,WAErG,cAAC5B,EAAA,EAAD,CAAKT,UAAU,yBAAf,SAAyC0B,IACzC,cAACjB,EAAA,EAAD,CAAKT,UAAU,yBAAf,SAAyCyB,SAG3C,cAAChB,EAAA,EAAD,CAAKT,UAAU,aAAf,SACC,cAACO,EAAA,EAAD,CAAKP,UAAU,0BAAf,SACC,cAAC,EAAD,CAAWQ,QAAS,SAACL,GAAD,OAAK,EAAKmC,YAAYnC,IAAIZ,QAASqB,EAAQG,GAASxB,qB,GAzFzDgD,a,8BCHrB,SAASC,EAAQ3C,GACf,IAAM4C,EAAU,cAAgB5C,EAAM6C,SAAU,YAAc,IAC5D,OACE,wBAAQ1C,UAAWyC,EAASjC,QAASX,EAAMW,QAA3C,SACKX,EAAM8C,Q,IAKXC,E,kKAEJ,WAEI,IAFY,IAAD,OACPC,EAAM,GACF1C,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAElB,IADA,IAAI2C,EAAS,GADK,WAEVzC,GACN,IAAI0C,EAAU,EAAE5C,EAAEE,EAClByC,EAASxC,KACH,cAACkC,EAAD,CAEEG,MAAO,EAAK9C,MAAMmD,QAAQC,QAAQF,GAClCvC,QAAS,kBAAI,EAAKX,MAAMW,QAAQuC,IAChCL,SACE,EAAK7C,MAAMmD,QAAQE,gBAAgBH,KAClC,EAAKlD,MAAMsD,SAAQ,EAAKtD,MAAMsD,QAAQC,MAAK,SAAAC,GAAE,OAAEA,IAAKN,MALlD1C,KAJPA,EAAE,EAAEA,EAAE,EAAEA,IAAK,EAAbA,GAYRwC,EAAMvC,KAAK,cAACG,EAAA,EAAD,CAAKT,UAAU,yBAAf,SAAiD8C,GAAJ3C,IAE1D,OAAO0C,I,oBAGX,WACE,OACI5B,KAAKqC,mB,GAzBOf,aAsHpB,SAASgB,EAAgBN,GAWvB,IAVA,IAAMO,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEArD,EAAI,EAAGA,EAAIqD,EAAMrC,OAAQhB,IAAK,CACrC,kBAAkBqD,EAAMrD,GAAxB,GAAOsD,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIV,EAAQQ,IAAMR,EAAQQ,KAAOR,EAAQS,IAAMT,EAAQQ,KAAOR,EAAQU,GACpE,MAAO,CAACC,OAAOX,EAAQQ,GAAIN,QAAQK,EAAMrD,IAG7C,OAAO,KAIM0D,M,kDA5Gb,WAAYhE,GAAO,IAAD,8BAChB,cAAMA,IACDc,MAAM,CACTC,QAAS,CAAC,CACRqC,QAASpC,MAAM,GAAGC,KAAK,MACvBoC,eAAe,IAEjBY,WAAW,EACXC,SAAQ,GARM,E,+CAalB,SAAY5D,GACV,IAAMS,EAAQK,KAAKN,MAAMC,QAAQM,MAAM,EAAGD,KAAKN,MAAMmD,WAAa,GAE5Db,EADQrC,EAAQA,EAAQO,OAAO,GACb8B,QAAQ/B,QACrBqC,EAAgBN,IACbA,EAAQ9C,KAGtB8C,EAAQ9C,GAAKc,KAAKN,MAAMoD,QAAS,IAAM,IACvC9C,KAAKI,SAAS,CACZT,QAASA,EAAQQ,OAAO,CAAC6B,QAAQA,EAASC,cAAc/C,IACxD2D,WAAWlD,EAAQO,OACnB4C,SAAU9C,KAAKN,MAAMoD,a,oBAIzB,SAAOC,GACL/C,KAAKI,SAAS,CACZyC,WAAWE,EACXD,QAASC,EAAK,IAAK,M,oBAKvB,WAAU,IAiBJC,EAjBG,OACDrD,EAAUK,KAAKN,MAAMC,QACrBoC,EAAUpC,EAAQK,KAAKN,MAAMmD,YAE/BF,EAASL,EAAgBP,EAAQC,SAE/BiB,EAAQtD,EAAQuD,KAAI,SAACH,EAAKI,GAC9B,IAAMC,EAAOD,EACX,SAAWA,EACV,8BAAG,cAAC,IAAD,CAAiBnC,KAAMI,MAA1B,0BACH,OACE,6BACE,cAACR,EAAA,EAAD,CAAQC,MAAM,UAAUtB,QAAS,kBAAM,EAAK8D,OAAOF,IAAnD,SAA2DC,KADpDD,MAgBb,OAPEH,EADEL,EACO,cAAgBA,EAAOA,OACA,IAAxB3C,KAAKN,MAAMmD,WACZ,WAEE,aAAe7C,KAAKN,MAAMoD,QAAU,IAAM,KAInD,cAACQ,EAAA,EAAD,UACE,eAAC9D,EAAA,EAAD,WACE,eAACF,EAAA,EAAD,CAAKP,UAAU,sBAAf,UACE,cAACwE,EAAA,EAAD,CAAO1C,MAAM,UAAb,SAAwBmC,IACxB,qBAAKjE,UAAU,OAAf,SACE,cAAC,EAAD,CACEgD,QAASA,EACTxC,QAAS,SAACL,GAAD,OAAK,EAAKmC,YAAYnC,IAC/BgD,QAASS,EAAOA,EAAOT,QAAQ,YAIrC,cAAC5C,EAAA,EAAD,CAAKkE,IAAE,EAACzE,UAAU,oBAAlB,SAAsC,yBACtC,cAACO,EAAA,EAAD,CAAKmE,GAAG,IAAIC,GAAI,IAAKF,GAAG,IAAIG,GAAG,IAAI5E,UAAU,kBAA7C,SACE,6BAAKkE,e,GAhFE3B,a,eCjBJsC,MAvBf,WACE,OACE,qBAAK7E,UAAU,OAAf,SACE,eAAC,IAAD,WACE,iDACA,qBAAIA,UAAU,SAAd,UACE,6BAAa,cAAC,IAAD,CAAM8E,GAAG,IAAT,qBAAL,MACR,6BAAa,cAAC,IAAD,CAAMA,GAAG,QAAT,mBAAL,SAGV,qBAAK9E,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAI,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAK,QAASC,UAAW,kBAAI,cAAC,EAAD,kBCNjCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f3148ac5.chunk.js","sourcesContent":["function checkWin(game){\r\n\t//const pDir=[[1,0], [0, 1], [1,1], [1,-1]] /* colonna, riga */ \r\n\treturn controllaDirezione(game, [1,0]) || controllaDirezione(game, [0, 1]) || controllaDirezione(game, [1,1]) || controllaDirezione(game, [1,-1]);\r\n}\r\n\r\nfunction controllaDirezione(game, direzione){\r\n\tlet num=controllaVerso(game, direzione) + controllaVerso(game, [-direzione[0],-direzione[1]])\r\n\treturn num>=3; /*3 perché l'elemento appena selezionato sarà sicuramente valido */\r\n}\r\n\r\nfunction controllaVerso(game, direzione){\r\n\tlet [x,y]=[game.lastInserted.colonna, game.lastInserted.riga];\r\n\tconst grid=game.griglia;\r\n\r\n\tlet count=0;\r\n\tfor(let colore=grid[x][y]; checkBound(x,y) && colore===grid[x][y]; count++, x+=direzione[0], y+=direzione[1]);\r\n\treturn count-1;/*devo rimuovere l'elemento iniziale che non serve*/\r\n\r\n}\r\nfunction checkBound(x,y){\r\n\tif(x >= 0 && x < 7 && y >= 0 && y < 6)\r\n\t\treturn true;\r\n\treturn false;\r\n}\r\n\r\nexport default checkWin;","import { Row, Col, Container} from 'reactstrap';\r\n\r\nfunction CreaGioco(props){\r\n\t\r\n\tlet tabella=[];\r\n\tfor(let i=5; i>=0;i--){\r\n\t\tlet colonne=[];\r\n\t\t\r\n\t\tfor(let j=0;j<7;j++){\r\n\t\t\tcolonne.push(\r\n\t\t\t\t<Col key={j} onClick={()=>props.onClick(j)}><Cella valore={props.griglia[j][i]}/></Col>\r\n\t\t\t);\r\n\t\t}\r\n\t\ttabella.push(<Row key={i} className=\"flex-nowrap no-gutters\">{colonne}</Row>);\r\n\t}\r\n\r\n\treturn(\r\n\t\ttabella\r\n\t);\r\n}\r\n\r\nfunction Cella(props) {\r\n\tlet classname=\"f4square \"+(props.valore?props.valore:\"\");\r\n\r\n\treturn (\r\n\t\t<button className={classname}></button>\r\n\t);\r\n}\r\n\r\n\r\nexport default CreaGioco;","import '../../css/Forza4.css';\r\nimport {Component} from 'react';\r\nimport {Button, Row, Col} from 'reactstrap';\r\nimport checkWin from './controlloVittoria';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft, faArrowRight, faRedo} from '@fortawesome/free-solid-svg-icons';\r\nimport CreaGioco from './Tavolo';\r\n\r\n\r\nclass Forza4 extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state={\r\n\t\t\thistory : [{\r\n\t\t\t\tgriglia : Array(7).fill(\"\"),\r\n\t\t\t\tlastInserted: {riga: null, colonna:null}\r\n\t\t\t}],\r\n\t\t\tstepNum : 0,\r\n\t\t\txTurn\t: true,/*X = rosso - O = giallo*/\r\n\t\t};\r\n\t}\r\n\t\r\n\thandleClick(i){\r\n\t\tconst stepNum=this.state.stepNum;\r\n\t\tconst history=this.state.history.slice(0, stepNum + 1);\r\n\t\t\r\n\t\tconst game=history[history.length-1];\r\n\t\tconst griglia=game.griglia.slice();\r\n\r\n\t\tif(griglia[i].length>=6 || (stepNum>6?checkWin(game): false)){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet lastInserted={riga : griglia[i].length, colonna : i}\r\n\t\tlet colonna=griglia[i].concat(this.state.xTurn? \"X\":\"O\");\r\n\r\n\t\tlet grid= griglia.slice(0,i).concat(colonna, griglia.slice(i+1, griglia.length));\r\n\r\n\t\tthis.setState({\r\n\t\t\thistory : history.concat({ griglia:grid, lastInserted:lastInserted}),\r\n\t\t\tstepNum : stepNum + 1,\r\n\t\t\txTurn \t: !this.state.xTurn\r\n\t\t});\r\n\t}\r\n\r\n\tmodStep(num){\r\n\t\tif(Math.abs(num)!==1) return;\r\n\t\tthis.setState({\r\n\t\t\tstepNum : this.state.stepNum+num,\r\n\t\t\txTurn\t: !this.state.xTurn\r\n\t\t});\r\n\t}\r\n\r\n\tricomincia(){\r\n\t\tthis.setState({\r\n\t\t\thistory : [{\r\n\t\t\t\tgriglia : Array(7).fill(\"\"),\r\n\t\t\t\tlastInserted: {riga: null, colonna:null}\r\n\t\t\t}],\r\n\t\t\tstepNum : 0,\r\n\t\t\txTurn\t: true,/*X = rosso - O = giallo*/\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\trender(){\r\n\t\tconst stepNum=this.state.stepNum;\r\n\t\tconst history=this.state.history;\r\n\t\tlet stato;\r\n\t\tif(stepNum > 6 && checkWin(history[stepNum]))\r\n\t\t\tstato= \" Ha vinto il \"+ (!this.state.xTurn? \"Rosso\":\"Giallo\")\r\n\t\telse if(stepNum >= 42)\r\n\t\t\tstato = \" Pareggio\";\r\n\t\telse\r\n\t\t\tstato= \" Tocca al \" + (this.state.xTurn? \"Rosso\":\"Giallo\");\r\n\t\t\r\n\t\tlet turno=\" Turno: \"+stepNum;\r\n\r\n\t\tlet btnBackDis=stepNum===0;\r\n\t\tlet btnFrontDis=stepNum===history.length-1\r\n\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Row className=\"no-gutters\">\r\n\t\t\t\t\t<Col >\r\n\t\t\t\t\t\t<Row className=\"d-block no-gutters history\">\r\n\t\t\t\t\t\t\t<Button className=\"d-inline\" color=\"primary\" disabled={btnBackDis} onClick={()=>this.modStep(-1)}><FontAwesomeIcon icon={faArrowLeft}/></Button>\t\r\n\t\t\t\t\t\t\t<Button className=\"d-inline\" color=\"primary\" disabled={btnFrontDis} onClick={()=>this.modStep(1)} ><FontAwesomeIcon icon={faArrowRight}/></Button>\r\n\t\t\t\t\t\t\t<Button className=\"d-inline\" color=\"primary\" onClick={()=>this.ricomincia()}><FontAwesomeIcon icon={faRedo}/></Button>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"justify-content-center\">{turno}</Row>\r\n\t\t\t\t\t\t<Row className=\"justify-content-center\">{stato}</Row>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"no-gutters\">\r\n\t\t\t\t\t<Col className=\"p-1 flex-grow-0 mx-auto\">\r\n\t\t\t\t\t\t<CreaGioco onClick={(i)=>this.handleClick(i)} griglia={history[stepNum].griglia}/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Forza4;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {Component} from 'react';\r\nimport {Button, Container, Row, Col, Badge} from 'reactstrap';\r\nimport {faRedo} from '@fortawesome/free-solid-svg-icons';\r\nimport \"../../css/Tris.css\";\r\n\r\nfunction Square (props){\r\n  const classes = \"squareTris\" + (props.selected? \" selected\" : \"\")\r\n    return (\r\n      <button className={classes} onClick={props.onClick}>\r\n          {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends Component {\r\n\r\n  renderSquare() {\r\n      let table=[];\r\n      for(let i=0;i<3;i++){\r\n        let children=[];\r\n        for(let j=0;j<3;j++){\r\n          let squareNum=3*i+j;\r\n          children.push(\r\n                <Square\r\n                  key={j}\r\n                  value={this.props.current.squares[squareNum]} \r\n                  onClick={()=>this.props.onClick(squareNum)}\r\n                  selected={\r\n                    this.props.current.buttonclicked===squareNum || \r\n                    (this.props.winline?this.props.winline.some(el=>el===squareNum):false)}\r\n                />);\r\n        }\r\n        table.push(<Row className=\"flex-nowrap no-gutters\" key={i}>{children}</Row>);\r\n      }\r\n      return table;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        this.renderSquare()\r\n    );\r\n  }\r\n}\r\n\r\nclass Tris extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        buttonclicked:-1,\r\n      }],\r\n      stepNumber:0,\r\n      xIsNext:true,\r\n\r\n    };\r\n  }\r\n  \r\n  handleClick(i){\r\n    const history=this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current=history[history.length-1];\r\n    const squares = current.squares.slice();\r\n    let winner=calculateWinner(squares)\r\n    if (winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat({squares:squares, buttonclicked:i}),\r\n      stepNumber:history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step){\r\n    this.setState({\r\n      stepNumber:step,\r\n      xIsNext:(step%2)===0\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n\r\n    let winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step,move) => {\r\n      const desc = move ?\r\n        'Mossa ' + move:\r\n        (<i><FontAwesomeIcon icon={faRedo}/>  Ricomincia partita</i>);\r\n      return (\r\n        <li key={move}>\r\n          <Button color=\"primary\" onClick={() => this.jumpTo(move)}>{desc}</Button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    \r\n    if (winner) {\r\n      status = 'Vincitore: ' + winner.winner;\r\n    } else if(this.state.stepNumber===9){\r\n      status='Pareggio'\r\n    }else{\r\n      status = 'Turno di ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Row >\r\n          <Col className=\"mx-auto flex-grow-0\">\r\n            <Badge color=\"primary\">{status}</Badge>\r\n            <div className=\"mt-2\">\r\n              <Board \r\n                current={current}\r\n                onClick={(i)=>this.handleClick(i)}\r\n                winline={winner?winner.winline:null}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md className=\"d-block d-md-none\"><hr /></Col>\r\n          <Col xs=\"7\" sm =\"5\"  md=\"4\" lg=\"3\" className=\"mx-auto history\">\r\n            <ol>{moves}</ol>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {winner:squares[a], winline:lines[i]};\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\nexport default Tris;\r\n","import './css/App.css';\r\nimport Forza4 from './component/Forza4/Forza4';\r\nimport Tris from './component/Tris/Tris';\r\nimport {HashRouter, Link, Switch, Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"sito\">\r\n      <HashRouter>\r\n        <h1>Giochi in React</h1>\r\n        <ul className=\"header\">\r\n          <li key='h0'><Link to=\"/\">Forza4</Link></li>\r\n          <li key='h1'><Link to=\"/Tris\">Tris</Link></li>\r\n          \r\n        </ul>\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={()=><Forza4/>} />\r\n            <Route path=\"/Tris\"  component={()=><Tris/>} />\r\n            \r\n          </Switch>\r\n          \r\n        </div>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './css/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './utils/reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';  //Bootstrap\r\nimport 'font-awesome/css/font-awesome.min.css'; //FontAwesome\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}