{"version":3,"sources":["component/Forza4/Tavolo.js","component/Forza4/controlloVittoria.js","component/Forza4/Forza4.js","component/Tris/Tris.js","App.js","utils/reportWebVitals.js","index.js"],"names":["Colonna","props","colonna","i","push","Row","className","Cella","onClick","valore","valori","classname","Col","Tavolo","tavolo","griglia","controllaDirezione","game","direzione","controllaVerso","lastInserted","riga","x","y","grid","count","colore","checkBound","checkWin","Forza4","state","history","Array","fill","stepNum","xTurn","this","slice","length","concat","setState","num","Math","abs","stato","turno","btnBackDis","btnFrontDis","handleClick","Button","color","disabled","modStep","icon","faArrowLeft","faArrowRight","ricomincia","faRedo","Component","Square","classes","selected","value","Board","table","children","j","squareNum","current","squares","buttonclicked","winline","some","el","renderSquare","calculateWinner","lines","a","b","c","winner","Tris","stepNumber","xIsNext","step","status","moves","map","move","floor","desc","jumpTo","Container","Alert","md","xs","sm","lg","App","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43541db0.chunk.js","sourcesContent":["import { Row, Col } from 'reactstrap';\r\n\r\nfunction Tavolo(props){\r\n\tlet tavolo=[];\r\n\tfor(let i=0;i<7;i++){\r\n\t\ttavolo.push(\r\n\t\t\t<Col key={i}>\r\n\t\t\t\t<Colonna onClick={()=>props.onClick(i)} valori={props.griglia[i]}/>\r\n\t\t\t</Col>\r\n\t\t);\r\n\t}\r\n\treturn <Row className=\"flex-nowrap no-gutters\">{tavolo}</Row>;\r\n}\r\n\r\nfunction Colonna(props){\r\n\tlet colonna=[];\r\n\t\t\tfor(let i=5;i>=0;i--){\r\n\t\t\t\tcolonna.push(\r\n\t\t\t\t\t<Row className=\"flex-nowrap no-gutters\" key={i}><Cella onClick={props.onClick} valore={props.valori[i]}/></Row>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\treturn colonna;\r\n}\r\n\r\nfunction Cella(props) {\r\n\tlet classname=\"f4square \"+props.valore;\r\n\r\n\treturn (\r\n\t<Col><button onClick={props.onClick} className={classname}></button></Col>\r\n\t);\r\n}\r\n\r\n\r\nexport default Tavolo;","function checkWin(game){\r\n\t//const pDir=[[1,0], [0, 1], [1,1], [1,-1]] /* colonna, riga */ \r\n\treturn controllaDirezione(game, [1,0]) || controllaDirezione(game, [0, 1]) || controllaDirezione(game, [1,1]) || controllaDirezione(game, [1,-1]);\r\n}\r\n\r\nfunction controllaDirezione(game, direzione){\r\n\tlet num=controllaVerso(game, direzione) + controllaVerso(game, [-direzione[0],-direzione[1]])\r\n\treturn num>=3; /*3 perché l'elemento appena selezionato sarà sicuramente valido */\r\n}\r\n\r\nfunction controllaVerso(game, direzione){\r\n\tlet [x,y]=[game.lastInserted.colonna, game.lastInserted.riga];\r\n\tconst grid=game.griglia;\r\n\r\n\tlet count=0;\r\n\tfor(let colore=grid[x][y]; checkBound(x,y) && colore===grid[x][y]; count++, x+=direzione[0], y+=direzione[1]);\r\n\treturn count-1;/*devo rimuovere l'elemento iniziale che non serve*/\r\n\r\n}\r\nfunction checkBound(x,y){\r\n\tif(x >= 0 && x < 7 && y >= 0 && y < 6)\r\n\t\treturn true;\r\n\treturn false;\r\n}\r\n\r\nexport default checkWin;","import '../../css/Forza4.css';\r\nimport {Component} from 'react';\r\nimport {Button} from 'reactstrap';\r\nimport Tavolo from './Tavolo';\r\nimport checkWin from './controlloVittoria';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faArrowLeft, faArrowRight, faRedo} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass Forza4 extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state={\r\n\t\t\thistory : [{\r\n\t\t\t\tgriglia : Array(7).fill(\"\"),\r\n\t\t\t\tlastInserted: {riga: null, colonna:null}\r\n\t\t\t}],\r\n\t\t\tstepNum : 0,\r\n\t\t\txTurn\t: true,/*X = rosso - O = giallo*/\r\n\t\t};\r\n\t}\r\n\t\r\n\thandleClick(i){\r\n\t\tconst stepNum=this.state.stepNum;\r\n\t\tconst history=this.state.history.slice(0, stepNum + 1);\r\n\t\t\r\n\t\tconst game=history[history.length-1];\r\n\t\tconst griglia=game.griglia.slice();\r\n\r\n\t\tif(griglia[i].length>=6 || (stepNum>6?checkWin(game): false)){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet lastInserted={riga : griglia[i].length, colonna : i}\r\n\t\tlet colonna=griglia[i].concat(this.state.xTurn? \"X\":\"O\");\r\n\r\n\t\tlet grid= griglia.slice(0,i).concat(colonna, griglia.slice(i+1, griglia.length));\r\n\r\n\t\tthis.setState({\r\n\t\t\thistory : history.concat({ griglia:grid, lastInserted:lastInserted}),\r\n\t\t\tstepNum : stepNum + 1,\r\n\t\t\txTurn \t: !this.state.xTurn\r\n\t\t});\r\n\t}\r\n\r\n\tmodStep(num){\r\n\t\tif(Math.abs(num)!==1) return;\r\n\t\tthis.setState({\r\n\t\t\tstepNum : this.state.stepNum+num,\r\n\t\t\txTurn\t: !this.state.xTurn\r\n\t\t});\r\n\t}\r\n\r\n\tricomincia(){\r\n\t\tthis.setState({\r\n\t\t\thistory : [{\r\n\t\t\t\tgriglia : Array(7).fill(\"\"),\r\n\t\t\t\tlastInserted: {riga: null, colonna:null}\r\n\t\t\t}],\r\n\t\t\tstepNum : 0,\r\n\t\t\txTurn\t: true,/*X = rosso - O = giallo*/\r\n\t\t})\r\n\t}\r\n\t\r\n\r\n\trender(){\r\n\t\tconst stepNum=this.state.stepNum;\r\n\t\tconst history=this.state.history;\r\n\t\tlet stato;\r\n\t\tif(stepNum > 6 && checkWin(history[stepNum]))\r\n\t\t\tstato= \" Ha vinto il \"+ (!this.state.xTurn? \"Rosso\":\"Giallo\")\r\n\t\telse if(stepNum >= 42)\r\n\t\t\tstato = \" Pareggio\";\r\n\t\telse\r\n\t\t\tstato= \" Tocca al \" + (this.state.xTurn? \"Rosso\":\"Giallo\");\r\n\t\t\r\n\t\tlet turno=\" Turno: \"+stepNum;\r\n\r\n\t\tlet btnBackDis=stepNum===0;\r\n\t\tlet btnFrontDis=stepNum===history.length-1\r\n\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t\r\n\t\t\t\t<Tavolo onClick={(i)=>this.handleClick(i)} griglia={history[stepNum].griglia}/>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button color=\"primary\" disabled={btnBackDis} onClick={()=>this.modStep(-1)}><FontAwesomeIcon icon={faArrowLeft}/></Button>\r\n\t\t\t\t\t\t<Button color=\"primary\" disabled={btnFrontDis} onClick={()=>this.modStep(1)} ><FontAwesomeIcon icon={faArrowRight}/></Button>\r\n\t\t\t\t\t\t<Button color=\"primary\" onClick={()=>this.ricomincia()}><FontAwesomeIcon icon={faRedo}/></Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div color='primary'>{turno}</div>\r\n\t\t\t\t\t<div >{stato}</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Forza4;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {Component} from 'react';\r\nimport {Button, Container, Row, Col, Alert} from 'reactstrap';\r\nimport {faRedo} from '@fortawesome/free-solid-svg-icons';\r\nimport \"../../css/Tris.css\";\r\n\r\nfunction Square (props){\r\n  const classes = \"squareTris\" + (props.selected? \" selected\" : \"\")\r\n    return (\r\n      <button className={classes} onClick={props.onClick}>\r\n          {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends Component {\r\n\r\n  renderSquare() {\r\n      let table=[];\r\n      for(let i=0;i<3;i++){\r\n        let children=[];\r\n        for(let j=0;j<3;j++){\r\n          let squareNum=3*i+j;\r\n          children.push(\r\n                <Square\r\n                  key={j}\r\n                  value={this.props.current.squares[squareNum]} \r\n                  onClick={()=>this.props.onClick(squareNum)}\r\n                  selected={\r\n                    this.props.current.buttonclicked===squareNum || \r\n                    (this.props.winline?this.props.winline.some(el=>el===squareNum):false)}\r\n                />);\r\n        }\r\n        table.push(<Row className=\"flex-nowrap no-gutters\" key={i}>{children}</Row>);\r\n      }\r\n      return table;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        this.renderSquare()\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nclass Tris extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        buttonclicked:-1,\r\n      }],\r\n      stepNumber:0,\r\n      xIsNext:true,\r\n\r\n    };\r\n  }\r\n  \r\n  handleClick(i){\r\n    const history=this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current=history[history.length-1];\r\n    const squares = current.squares.slice();\r\n    let winner=calculateWinner(squares)\r\n    if (winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat({squares:squares, buttonclicked:i}),\r\n      stepNumber:history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step){\r\n    this.setState({\r\n      stepNumber:step,\r\n      xIsNext:(step%2)===0\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n\r\n    let winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step,move) => {\r\n      let [riga, colonna]=[Math.floor(step.buttonclicked/3)+1, step.buttonclicked%3+1]\r\n      let prova=' ('+ riga+' '+colonna+')';\r\n      const desc = move ?\r\n        'Mossa ' + move:\r\n        (<i><FontAwesomeIcon icon={faRedo}/> Ricomincia partita</i>);\r\n      return (\r\n        <li key={move}>\r\n          <Button color=\"primary\" onClick={() => this.jumpTo(move)}>{desc}</Button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    \r\n    if (winner) {\r\n      status = 'Vincitore: ' + winner.winner;\r\n    } else if(this.state.stepNumber===9){\r\n      status='Pareggio'\r\n    }else{\r\n      status = 'Turno di ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Row >\r\n          <Col className=\"mx-auto game\">\r\n            <Alert color=\"danger\">{status}</Alert>\r\n            <Board \r\n              current={current}\r\n              onClick={(i)=>this.handleClick(i)}\r\n              winline={winner?winner.winline:null}\r\n            />\r\n          </Col>\r\n          <Col md className=\"d-block d-md-none\"><hr /></Col>\r\n          <Col xs=\"7\" sm =\"5\"  md=\"4\" lg=\"3\" className=\"mx-auto history\">\r\n            <ol>{moves}</ol>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {winner:squares[a], winline:lines[i]};\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\nexport default Tris;\r\n","import './css/App.css';\r\nimport Forza4 from './component/Forza4/Forza4';\r\nimport Tris from './component/Tris/Tris';\r\nimport {HashRouter, Link, Switch, Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"sito\">\r\n      <HashRouter>\r\n        <h1>Giochi in React</h1>\r\n        <ul className=\"header\">\r\n          <li key='h0'><Link to=\"/\">Forza4</Link></li>\r\n          <li key='h1'><Link to=\"/Tris\">Tris</Link></li>\r\n          \r\n        </ul>\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\"> <Forza4/> </Route>\r\n            <Route path=\"/Tris\"> <Tris/> </Route>\r\n            \r\n          </Switch>\r\n          \r\n        </div>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './css/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './utils/reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';  //Bootstrap\r\nimport 'font-awesome/css/font-awesome.min.css'; //FontAwesome\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}